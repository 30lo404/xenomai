#! /bin/sh

staging=${DESTDIR}
prefix="@prefix@"
exec_prefix="@exec_prefix@"
libdir="@libdir@"
datarootdir="@datarootdir@"
datadir="@datadir@"
pkgdatadir="${datadir}/@PACKAGE@"
includedir="@includedir@"

XENO_VERSION="@PACKAGE_VERSION@"
XENO_PREFIX="${staging}${prefix}"
XENO_CC="@CC@"
XENO_TARGET_ARCH="@XENO_BUILD_STRING@"
XENO_INCLUDE_DIR="${staging}${includedir}"
XENO_BASE_CFLAGS="-I$XENO_INCLUDE_DIR/mercury -I$XENO_INCLUDE_DIR @XENO_USER_APP_CFLAGS@ -D__MERCURY__"
XENO_BASE_LDFLAGS="-L${staging}${libdir} -lcopperplate -lpthread -lrt @XENO_USER_APP_LDFLAGS@"
XENO_LIBRARY_DIR="${staging}${libdir}"
WRAP_MAIN_OPT="-Wl,--wrap=main -Wl,--dynamic-list=${XENO_LIBRARY_DIR}/dynlist.ld"
WRAP_MAIN="$WRAP_MAIN_OPT"

unset prefix exec_prefix libdir datadir datarootdir pkgdatadir includedir skin_list

usage ()
{
cat <<EOF
Usage xeno-config OPTIONS
Options :
        --help
        --v,--verbose
        --version
        --cc
        --ccld
        --arch
        --prefix
        --[skin=]vxworks|psos|alchemy|rtdm
        --auto-init|no-auto-init
        --cflags
        --ldflags
        --lib*-dir,--libdir,--user-libdir
        --core
EOF
    exit $1
}

verbose ()
{
    echo xeno-config --verbose
    echo "        --core=mercury"
    echo "        --version=\"${XENO_VERSION}\""
    echo "        --cc=\"$XENO_CC\""
    echo "        --ccld=\"$XENO_CC\""
    echo "        --arch=\"$XENO_TARGET_ARCH\""
    echo "        --prefix=\"$XENO_PREFIX\""
    echo "        --library-dir=\"$XENO_LIBRARY_DIR\""
}

if test $# -eq 0; then
    verbose $*
    usage 1 1>&2
fi

while test $# -gt 0; do
    case "$1" in
        --v|--verbose)
            verbose $*
            exit 0
            ;;
        --version)
            echo ${XENO_VERSION}
            ;;
        --cc|--ccld)
            echo $XENO_CC
            ;;
        --arch)
            echo $XENO_TARGET_ARCH
            ;;
        --prefix)
            echo $XENO_PREFIX
            ;;
	--no-auto-init)
	    WRAP_MAIN=
	    ;;
	--auto-init)
	    WRAP_MAIN="$WRAP_MAIN_OPT"
	    ;;
        --lib*-dir|--libdir|--user-libdir)
            echo $XENO_LIBRARY_DIR
            ;;
	--skin)
	    skin_list="$skin_list $2"
	    shift
	    ;;
	--skin=*)
	    if [ "$1" = "--skin=native" ]; then
		skin_list="$skin_list alchemy"
            else
		skin_list="$skin_list `expr "$1" : '--skin=\(.*\)'`"
	    fi
	    ;;
	--vxworks|--psos|--alchemy|--rtdm)
	    skin_list="$skin_list `expr "$1" : '--\(.*\)'`"
	    ;;
	--cflags)
	    if test -z "$skin_list"; then
		echo "no RTOS skin specified, missing --skin before --cflags" 1>&2
		exit 1
	    fi
	    cflags="$XENO_BASE_CFLAGS"
	    for skin in $skin_list; do
		case "$skin" in
		    vxworks|psos|alchemy)
			cflags="$cflags -I$XENO_INCLUDE_DIR/$skin"
			;;
		    *)
			echo "unknown RTOS skin: $skin" 1>&2
			exit 1
			;;
		esac
	    done
	    echo $cflags
	    ;;
	--kcflags)
	    if test -z "$skin_list"; then
		echo "no kernel API specified, missing --skin before --kcflags" 1>&2
		exit 1
	    fi
	    kcflags=
	    for skin in $skin_list; do
		case "$skin" in
		    rtdm)
		    	;;
		    *)
			echo "unknown kernel API: $skin" 1>&2
			exit 1
			;;
		esac
	    done
	    echo $kcflags
	    ;;
	--ldflags)
	    if test -z "$skin_list"; then
		echo "no skin specified, missing --skin before --ldflags" 1>&2
		exit 1
	    fi
	    ldflags="$WRAP_MAIN $XENO_BASE_LDFLAGS"
	    for skin in $skin_list; do
		case "$skin" in
		    vxworks|psos|alchemy)
			ldflags="-l$skin $ldflags"
			;;
		    *)
			echo "unknown skin: $skin" 1>&2
			exit 1
			;;
		esac
	    done
	    echo $ldflags
	    ;;
	--core)
	    echo mercury
	    ;;
        --help)
            usage 0 1>&2
            ;;
        *)
         usage 1 1>&2
         ;;
    esac
    shift
done
